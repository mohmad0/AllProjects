{"version":3,"sources":["components/CourseForm/CourseForm.js","components/CourseList/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["CourseForm","props","onSubmit","addCourse","type","value","current","required","onChange","updateCourse","CourseList","state","isEdit","renderCourse","deteils","name","onClick","toggelCourse","deleteCourse","index","setState","updateCourseItem","e","preventDefault","input","editCourse","ref","v","defaultValue","this","Component","App","courses","target","length","push","splice","courseList","map","course","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAYeA,EAVI,SAACC,GAEnB,OACC,uBAAMC,SAAUD,EAAME,UAAtB,UACC,uBAAOC,KAAK,OAAOC,MAAOJ,EAAMK,QAASC,UAAQ,EAACC,SAAUP,EAAMQ,eAClE,wBAAQL,KAAK,SAAb,qBCiEYM,E,4MA5DdC,MAAQ,CACPC,QAAQ,G,EAITC,aAAe,WACd,OACC,+BACC,+BAAO,EAAKZ,MAAMa,QAAQC,OAC1B,wBAAQC,QAAU,WAAO,EAAKC,gBAA9B,kBACA,wBAAQD,QAAU,WAAO,EAAKf,MAAMiB,aAAa,EAAKjB,MAAMkB,QAA5D,wB,EAMHF,aAAe,WAAO,IAChBL,EAAU,EAAKD,MAAfC,OACL,EAAKQ,SAAS,CACbR,QAASA,K,EAKXS,iBAAmB,SAACC,GAEnB,GADAA,EAAEC,kBACE,EAAKC,MAAMnB,MAOd,OAAO,EALP,EAAKJ,MAAMwB,WAAW,EAAKxB,MAAMkB,MAAO,EAAKK,MAAMnB,OACnD,EAAKY,gB,EASPR,aAAe,WACd,OACC,uBAAMP,SAAU,EAAKmB,iBAArB,UACC,uBAAOjB,KAAK,OAAOsB,IAAK,SAACC,GAAO,EAAKH,MAAQG,GAAIC,aAAc,EAAK3B,MAAMa,QAAQC,OAClF,gD,uDAMM,IACHH,EAAUiB,KAAKlB,MAAfC,OACL,OACC,mCACGA,EAASiB,KAAKpB,eAAiBoB,KAAKhB,qB,GAtDjBiB,aC2EVC,G,kNA9EbpB,MAAQ,CACNqB,QAAS,GACT1B,QAAS,I,EAIXG,aAAe,SAACa,GACd,EAAKF,SAAS,CACZd,QAASgB,EAAEW,OAAO5B,S,EAKtBF,UAAY,SAACmB,GACXA,EAAEC,iBACF,IAAIjB,EAAU,EAAKK,MAAML,QACrB0B,EAAU,EAAKrB,MAAMqB,QACzB,IAAI1B,EAAQ4B,OASV,OAAO,EAPLF,EAAQG,KAAK,CAACpB,KAAKT,IACnB,EAAKc,SAAS,CACZY,UACA1B,QAAS,M,EASjBY,aAAe,SAACC,GACd,IAAIa,EAAU,EAAKrB,MAAMqB,QACzBA,EAAQI,OAAOjB,EAAO,GACtB,EAAKC,SAAS,CACZY,a,EAKJP,WAAa,SAACN,EAAMd,GAAW,IACxB2B,EAAW,EAAKrB,MAAhBqB,QACQA,EAAQb,GACf,KAAWd,EACjB,EAAKe,SAAS,CAACY,a,uDAKR,IAAD,OAECA,EAAWH,KAAKlB,MAAhBqB,QACDK,EAAaL,EAAQM,KAAK,SAACC,EAASpB,GAEpC,OAAO,cAAC,EAAD,CACaL,QAASyB,EAETpB,MAAOA,EACPM,WAAY,EAAKA,WACjBP,aAAc,EAAKA,cAHdC,MAQ/B,OACE,0BAASqB,UAAU,MAAnB,UACE,8CACA,cAAC,EAAD,CACYlC,QAASuB,KAAKlB,MAAML,QACpBG,aAAcoB,KAAKpB,aACnBN,UAAW0B,KAAK1B,YAE5B,mCAAM6B,EAAQE,OAASG,EAAa,mDAApC,c,GA1EUP,cCOHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6cc5437.chunk.js","sourcesContent":["import React from 'react';\n\nconst CourseForm = (props) => {\n\n\treturn(\n\t\t<form onSubmit={props.addCourse} >\n\t\t\t<input type=\"text\" value={props.current} required onChange={props.updateCourse} />\n\t\t\t<button type=\"submit\" >Add</button>\n\t\t</form>\n\t)\n}\n\nexport default CourseForm","import React, { Component, Fragment } from 'react';\n\n\n// <Fragment>\n// \t<li>\n// \t\t<span>{this.props.deteils.name}</span>\n// \t\t<button onClick={ () => {this.props.deleteCourse(this.props.index)}}>Delete</button>\n// \t</li>\n// </Fragment>\n\nclass CourseList extends Component {\n\n\tstate = {\n\t\tisEdit: false\n\t}\n\n\t//Render Course Item\n\trenderCourse = () => {\n\t\treturn(\n\t\t\t<li>\n\t\t\t\t<span>{this.props.deteils.name}</span>\n\t\t\t\t<button onClick={ () => {this.toggelCourse()}}>Edit</button>\n\t\t\t\t<button onClick={ () => {this.props.deleteCourse(this.props.index)}}>Delete</button>\n\t\t\t</li>\n\t\t)\n\t}\n\n\t// Toggel Course\n\ttoggelCourse = () => {\n\t\tlet {isEdit} = this.state;\n\t\tthis.setState({\n\t\t\tisEdit: !isEdit\n\t\t})\n\t}\n\n\t// Update Course Item\n\tupdateCourseItem = (e) => {\n\t\te.preventDefault();\n\t\tif (this.input.value)\n\t\t{\n\t\t\tthis.props.editCourse(this.props.index, this.input.value);\n\t\t\tthis.toggelCourse();\n\n\t\t}else\n\t\t{\n\t\t\treturn false\n\t\t}\n\t}\n\n\t// Update Course\n\tupdateCourse = () => {\n\t\treturn(\n\t\t\t<form onSubmit={this.updateCourseItem}>\n\t\t\t\t<input type=\"text\" ref={(v) => {this.input = v}} defaultValue={this.props.deteils.name} />\n\t\t\t\t<button>Update</button>\n\t\t\t</form>\n\t\t)\n\t}\n\n\n\trender(){\n\t\tlet {isEdit} = this.state;\n\t\treturn(\n\t\t\t<>\n\t\t\t\t{ isEdit ? this.updateCourse() : this.renderCourse() }\n\t\t\t</>\n\t\t\t\n\t\t)\n\t}\n\n}\n\nexport default CourseList","import React, { Component } from 'react';\nimport CourseForm from './components/CourseForm/CourseForm'\nimport CourseList from './components/CourseList/CourseList'\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    courses :[],\n    current: ''\n  }\n\n  //UpdateCourse\n  updateCourse = (e) => {\n    this.setState({\n      current: e.target.value\n    })\n  }\n\n  //AddCourse\n  addCourse = (e) => {\n    e.preventDefault();\n    let current = this.state.current;\n    let courses = this.state.courses;\n    if (current.length)\n    {\n        courses.push({name:current})\n        this.setState({\n          courses,\n          current: ''\n        })\n    }else\n    {\n      return false\n    }\n  }\n\n  //Delete Course\n  deleteCourse = (index) => {\n    let courses = this.state.courses;\n    courses.splice(index, 1)\n    this.setState({\n      courses\n    })\n  }\n\n  // Edit Course\n  editCourse = (index,value) => {\n    let {courses} = this.state;\n    let course = courses[index];\n    course[\"name\"] = value;\n    this.setState({courses})\n\n  }\n\n\n  render(){\n\n    const {courses} = this.state;\n    const courseList = courses.map( (course , index) => {\n\n          return <CourseList \n                              deteils={course} \n                              key={index} \n                              index={index} \n                              editCourse={this.editCourse} \n                              deleteCourse={this.deleteCourse}\n                  />\n\n    })\n\n    return (\n      <section className=\"App\">\n        <h2>Add New Item</h2>\n        <CourseForm\n                    current={this.state.current} \n                    updateCourse={this.updateCourse} \n                    addCourse={this.addCourse}\n        />\n        <ul> {courses.length ? courseList : <p> There Is No Item </p>} </ul>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}